{"version":3,"sources":["store/storeSettings.js","utility/utilities.js","store/data.js","store/dbReducer.js","utility/Locals.js","hooks/useForm.js","components/ToggleItem.js","components/Accounts/Account.js","components/Accounts/AccountsView.js","components/Accounts/AddView.js","components/FundsSummary.js","components/ToolsBar.js","components/Header.js","components/TodoTemplate.js","components/TodoCategory.js","components/TodoCategoryView.js","components/TodoView.js","App.js","serviceWorker.js","index.js"],"names":["db","React","createContext","state","getCurrentDate","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","console","log","sum","values","reduce","accumulator","currentValue","dataCollections","dataTheme","light","dark","theme","acts_list_layout","acts_card_layout","acts_theme","AvailableFunds","id","Name","Balance","BalanceDate","isActive","dataGroceryTodo","CategoryId","Budget","Price","AvailableFunds_NextId","SummaryTotals","TotalBalance","CurrentBudget","visible","isHeaderVisible","isSummaryVisible","isAddViewVisible","isToolBarVisible","isAccountView","isBtnAddViewVisible","Selections","SelectedCategoryId","length","filter","item","map","parseInt","toFixed","toString","replace","parseFloat","Update_CurrentBudget","dbReducer","action","type","selections","payload","isVisible","target","selectedTheme","mode","Update_TotalBalance","new_model","model","push","updated_model","newAvailableFunds","newstate","getInitialMode","isReturningUser","localStorage","savedMode","JSON","parse","getItem","userprefersDark","window","matchMedia","matches","getPreColorsScheme","useForm","initState","useState","fields","setFields","setField","e","propertyName","name","propertyValue","value","Value","reset","Iname","Ibalance","isBalanceValid","isNaN","GetUpdatedBalance","tempBalance","indexOf","mapStateToProps","mapDispatchToProps","ToggleItem","props","callBack","offOnStyle","off","color","fontSize","fontWeight","padding","width","on","className","style","checked","onChange","htmlFor","Account","itm","funditem","useContext","dispatch","data-theme","Fab","onClick","updatedModel","aria-label","bind","connect","funds","DispatchUpdateFund","dispatchDeleteFund","Component","stateToProps","dispatchToProps","funcFundUpdate","prop","sort","a","b","fundItem","key","AddView","IconButton","FundsSummary","marginLeft","ViewType","ToolsBarItems","viewType","icon","ToolsBar","useEffect","Header","darkMode","setDarMode","setItem","stringify","prevState","TodoTemplate","todo","TodoCategory","CatName","Badge","badgeContent","BadgeNumber","max","TodoCatData","TodoCategoryView","initial","useCategoryForm","catname","setState","gridColumn","justifySelf","categorName","TodoView","GroceryTodoList","App","useReducer","Provider","data-accounts-layout","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e8e78b5.chunk.js","sourcesContent":["\r\nimport React, {Component, useContext} from 'react';\r\n\r\n\r\nexport const db = React.createContext();\r\nexport const connect = (mapStateToProps, mapDispatchToProps) =>\r\n{\r\n  return function(Component){\r\n\r\n    return function(){\r\n\r\n        const {state, dispatch} = React.useContext(db)\r\n        const stateToProps = mapStateToProps(state)\r\n        const dispatchToProps = mapDispatchToProps(dispatch)\r\n        const props = {...stateToProps, ...dispatchToProps}\r\n\r\n        return (<Component {...props} />)\r\n    }\r\n  }\r\n}\r\n","function formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nconst getCurrentDate = () =>\r\n{\r\n    var today = new Date();\r\nvar dd = today.getDate();\r\n\r\nvar mm = today.getMonth()+1;\r\nvar yyyy = today.getFullYear();\r\nif(dd<10)\r\n{\r\n    dd='0'+dd;\r\n}\r\n\r\nif(mm<10)\r\n{\r\n    mm='0'+mm;\r\n}\r\ntoday = mm+'-'+dd+'-'+yyyy;\r\nconsole.log(today);\r\ntoday = mm+'/'+dd+'/'+yyyy;\r\nconsole.log(today);\r\ntoday = dd+'-'+mm+'-'+yyyy;\r\nconsole.log(today);\r\ntoday = dd+'/'+mm+'/'+yyyy;\r\nconsole.log(today);\r\n\r\nreturn  mm+'/'+dd+'/'+yyyy;\r\n}\r\n\r\nconst sum = (values) =>\r\n{\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n    return values.reduce(reducer);\r\n}\r\n\r\nexport {formatDate,getCurrentDate,sum};\r\n\r\n","import { sum } from '../utility/utilities';\r\n\r\nconst visible =\r\n{\r\n  isHeaderVisible: true\r\n  , isSummaryVisible: true\r\n  , isAddViewVisible: false\r\n  , isToolBarVisible: false\r\n  , isAccountView: false\r\n  , isBtnAddViewVisible: true\r\n}\r\nconst dataTheme = {\r\n  light: ''\r\n  , dark: 'dark'\r\n  , theme: ''\r\n  , acts_list_layout: 'list'\r\n  , acts_card_layout: 'card'\r\n  , acts_theme: ''\r\n}\r\n\r\nconst dataGroceryTodo = [\r\n  { id: 1, CategoryId: 1, Name: 'Eggs', Budget: 20.80, Price: 5.00 },\r\n  { id: 2, CategoryId: 1, Name: 'Milk', Budget: 3.70, Price: 5.00 },\r\n  { id: 3, CategoryId: 1, Name: 'Bread', Budget: 1.10, Price: 5.00 },\r\n  { id: 4, CategoryId: 1, Name: 'Cheese', Budget: 4.99, Price: 5.00 },\r\n  { id: 5, CategoryId: 1, Name: 'Cream Cheese', Budget: 3.95, Price: 5.00 },\r\n  { id: 6, CategoryId: 1, Name: 'Platano', Budget: 3.00, Price: 5.00 },\r\n  { id: 7, CategoryId: 1, Name: 'Rice', Budget: 8.77, Price: 5.00 },\r\n  { id: 8, CategoryId: 1, Name: 'Beans', Budget: .99, Price: 5.00 }];\r\n\r\nconst AvailableFunds = [\r\n  { id: 1, Name: \"Gift Card\", Balance: 352, BalanceDate: '12/02/2019', isActive: true }\r\n  , { id: 2, Name: \"Cash Savings\", Balance: 840, BalanceDate: '12/02/2019', isActive: true }\r\n  , { id: 3, Name: \"Bacnk Acct\", Balance: 542, BalanceDate: '12/02/2019', isActive: true }\r\n  , { id: 4, Name: \"Cash On Hand\", Balance: 180, BalanceDate: '12/02/2019', isActive: true }\r\n];\r\n\r\nconst SummaryTotals =\r\n{\r\n  TotalBalance: 0,\r\n  CurrentBudget: 0\r\n}\r\nconst Selections = {\r\n  SelectedCategoryId: 0\r\n}\r\n\r\n\r\nconst dataCollections = {\r\n  dataTheme: dataTheme\r\n  , AvailableFunds: AvailableFunds\r\n  , dataGroceryTodo: dataGroceryTodo\r\n  , AvailableFunds_NextId: 0\r\n  , SummaryTotals: SummaryTotals\r\n  , visible: visible,\r\n  Selections: Selections\r\n};\r\n\r\ndataCollections.AvailableFunds_NextId = dataCollections.AvailableFunds.length + 1;\r\n\r\ndataCollections.SummaryTotals.TotalBalance = Update_TotalBalance(dataCollections);\r\ndataCollections.SummaryTotals.CurrentBudget = Update_CurrentBudget(dataCollections);\r\n\r\nexport default dataCollections;\r\n\r\n\r\nfunction Update_TotalBalance(state) {\r\n\r\n  state.SummaryTotals.TotalBalance = (state.AvailableFunds.filter(item => { return item.isActive === true }).length > 0)\r\n    ? sum(state.AvailableFunds\r\n      .filter(item => { return item.isActive === true })\r\n      .map(item => parseInt(item.Balance)))\r\n      .toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    : 0;\r\n\r\n\r\n}\r\n\r\nfunction Update_CurrentBudget(state) {\r\n  return state.SummaryTotals.CurrentBudget = sum(state.dataGroceryTodo.map(item => parseFloat(item.Budget)))\r\n    .toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import { sum } from '../utility/utilities';\r\n\r\nconst dbReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CATSELECTION':\r\n      let selections = state.Selections;\r\n      selections.SelectedCategoryId = action.payload.id;\r\n      return { ...state, Selections: selections }\r\n    case 'VISIBLE':\r\n\r\n      let isVisible = state.visible;\r\n      switch (action.payload.target) {\r\n        case 'AddView':\r\n          isVisible.isAddViewVisible = !isVisible.isAddViewVisible;\r\n          isVisible.isBtnAddViewVisible = !isVisible.isBtnAddViewVisible;\r\n\r\n          break;\r\n        case 'CloseAddView':\r\n          isVisible.isAddViewVisible = !isVisible.isAddViewVisible;\r\n          isVisible.isBtnAddViewVisible = !isVisible.isBtnAddViewVisible;\r\n          break;\r\n        case 'AccountsView':\r\n          isVisible.isAccountView = !isVisible.isAccountView;\r\n          break;\r\n        default: break;\r\n\r\n      }\r\n      return { ...state, visible: isVisible }\r\n    case 'UPDATEACTSTHEME':\r\n      const selectedTheme = action.payload.theme;\r\n      state.dataTheme.acts_theme = selectedTheme;\r\n      return { ...state }\r\n    case 'THEMEMODE':\r\n      const theme = (action.payload.mode) ? state.dataTheme.dark : state.dataTheme.light;\r\n      state.dataTheme.theme = theme;\r\n      return { ...state }\r\n    case 'UPDATETOTALS':\r\n      Update_CurrentBudget(state);\r\n      Update_TotalBalance(state);\r\n      return { ...state }\r\n    case 'ADD':\r\n\r\n      let new_model = action.payload.model;\r\n      new_model.id = state.AvailableFunds_NextId;\r\n      state.AvailableFunds.push(new_model);\r\n\r\n      Update_CurrentBudget(state);\r\n      Update_TotalBalance(state);\r\n\r\n      return { ...state, AvailableFunds_NextId: new_model.id + 1 }\r\n    case 'UPDATE':\r\n\r\n      let updated_model = action.payload;\r\n\r\n      let newAvailableFunds = state.AvailableFunds.filter((item) => {\r\n        return item.id !== updated_model.id\r\n      });\r\n\r\n      newAvailableFunds.push(updated_model);\r\n      const newstate = { ...state, AvailableFunds: newAvailableFunds };\r\n\r\n      Update_CurrentBudget(newstate);\r\n      Update_TotalBalance(newstate);\r\n\r\n      return newstate;\r\n    case 'DELETE':\r\n\r\n      state.AvailableFunds = state.AvailableFunds.filter(item => item.id !== action.payload.id);\r\n      Update_CurrentBudget(state);\r\n      Update_TotalBalance(state);\r\n\r\n      return { ...state }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default dbReducer;\r\n\r\n\r\n\r\n\r\n\r\nfunction Update_TotalBalance(state) {\r\n\r\n  state.SummaryTotals.TotalBalance = (state.AvailableFunds.filter(item => { return item.isActive === true }).length > 0)\r\n    ? sum(state.AvailableFunds\r\n      .filter(item => { return item.isActive === true })\r\n      .map(item => parseInt(item.Balance)))\r\n      .toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    : 0;\r\n}\r\n\r\nfunction Update_CurrentBudget(state) {\r\n  return state.SummaryTotals.CurrentBudget = sum(state.dataGroceryTodo.map(item => parseFloat(item.Budget)))\r\n    .toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","function getPreColorsScheme()\r\n{\r\n  if(!window.matchMedia)return;\r\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n}\r\nfunction getInitialMode()\r\n{\r\n  const isReturningUser = \"dark\" in localStorage;\r\n  const savedMode = JSON.parse(localStorage.getItem('dark'));\r\n  const userprefersDark = getPreColorsScheme();\r\n\r\n  if(isReturningUser){//if the mode was saved -> dark/light\r\n      return savedMode;\r\n  }\r\n  else if(userprefersDark){//if preferred color  scheme is dark -> dark\r\n    return true;\r\n  }\r\n  else{//otherwise -> light\r\n    return false;\r\n  }\r\n}\r\nexport {getPreColorsScheme, getInitialMode}","import { useState } from 'react';\r\nimport {getCurrentDate} from '../utility/utilities';\r\n\r\n/**\r\n *  `useForm`.\r\n*\r\n* **/\r\nexport function useForm(initState) {\r\n\r\n  const [fields, setFields] = useState(initState);\r\n\r\n  const setField = (e) => {\r\n\r\n    const propertyName = (typeof e.target !='undefined')? e.target.name: e.Name;\r\n    const propertyValue = (typeof e.target !='undefined')? e.target.value: e.Value;\r\n    setFields({ ...fields,[propertyName]:propertyValue });\r\n  }\r\n  const reset = ()=>setFields({ id:fields.id, Name:fields.Name,Iname:'', Balance:fields.Balance, Ibalance:'', BalanceDate:fields.getCurrentDate});\r\n  const isBalanceValid = ()=>{return (isNaN(fields.Ibalance))?false:true}\r\n\r\n  const GetUpdatedBalance = (Balance)=>\r\n  {\r\n    let tempBalance = fields.Ibalance;\r\n    if(fields.Ibalance.indexOf(\"+\")>-1){\r\n      tempBalance =parseFloat(Balance) + parseFloat(fields.Ibalance)\r\n    }\r\n    else if(fields.Ibalance.indexOf(\"-\")>-1){\r\n      tempBalance = parseFloat(Balance) + parseFloat(fields.Ibalance)\r\n    }\r\n    return  tempBalance;\r\n  }\r\n  return {fields,setFields,setField,reset,isBalanceValid,GetUpdatedBalance}\r\n}\r\n","import React, {useState} from 'react';\r\nconst ToggleItem = (props) =>{\r\n    const {id, isActive,callBack} = props;\r\n    //const [state, setState] = useState(isActive);\r\n\r\n    const on = () =>{\r\n        const onStyle = (isActive)?\r\n            {color:'green', fontSize:'16px', fontWeight:'900', padding:'1px 2px', width:'20px'}:\r\n            {color:'grey', fontSize:'16px', fontWeight:'900', padding:'1px 2px', width:'20px'};\r\n        return onStyle;\r\n    }\r\n\r\n    const off = () =>{\r\n        const onStyle = (!isActive)?\r\n            {color:'red', fontSize:'16px', fontWeight:'900', padding:'1px 2px', width:'26px'}:\r\n            {color:'grey', fontSize:'16px', fontWeight:'900', padding:'1px 2px', width:'26px'};\r\n        return onStyle;\r\n    }\r\n\r\n    const offOnStyle ={off:off(),on:on()}\r\n\r\n    return (\r\n        <div className=\"toggle-container\">\r\n            <span style={offOnStyle.off}>off</span>\r\n            <span className=\"toggle\">\r\n                <input checked={isActive} onChange={()=>{callBack({isActive:!isActive})}}\r\n                type=\"checkbox\" className=\"checkbox\" id={`${id}`} />\r\n                <label htmlFor={`${id}`} />\r\n            </span>\r\n            <span style={offOnStyle.on}>on</span>\r\n        </div>\r\n    );\r\n}\r\nexport default  ToggleItem;","import React, { useContext } from 'react';\r\nimport './Account.scss'\r\nimport { db } from '../../store/storeSettings';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport ToggleItem from '../ToggleItem';\r\n\r\nimport { Fab } from '@material-ui/core';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\n\r\n\r\n\r\nconst Account = (props) => {\r\n    const itm = props.funditem;\r\n    const { state, dispatch } = useContext(db);\r\n    const { fields, setFields, setField, GetUpdatedBalance } = useForm({ Ibalance: \"\" });\r\n    function SendUpdate() {\r\n        let updatedModel = {\r\n            id: itm.id,\r\n            Name: itm.Name,\r\n            Balance: GetUpdatedBalance(itm.Balance),\r\n            BalanceDate: itm.BalanceDate\r\n            , isActive: itm.isActive\r\n        }\r\n        dispatch({ type: 'UPDATE', payload: updatedModel });\r\n        setFields({ Ibalance: '' });\r\n    }\r\n    function Delete() {\r\n        let updatedModel = {\r\n            id: itm.id,\r\n            Name: itm.Name,\r\n            Balance: itm.Balance,\r\n            BalanceDate: itm.BalanceDate\r\n        }\r\n        dispatch({ type: 'DELETE', payload: updatedModel })\r\n        //setFields({Ibalance:''});\r\n    }\r\n    function callback(props) {\r\n\r\n        const { isActive } = props;\r\n        let updatedModel = {\r\n            id: itm.id,\r\n            Name: itm.Name,\r\n            Balance: itm.Balance,\r\n            BalanceDate: itm.BalanceDate\r\n            , isActive: isActive\r\n        }\r\n        dispatch({ type: 'UPDATE', payload: updatedModel });\r\n        setFields({ Ibalance: '' });\r\n    }\r\n\r\n    return (\r\n        <div data-theme={state.dataTheme.theme} className=\"funditems\">\r\n            <div className=\"fundLName\">\r\n                {itm.Name}\r\n            </div>\r\n            <div className=\"fundLBalance\">\r\n                ${parseFloat(itm.Balance).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n            </div>\r\n            <div className=\"fundLBalanceDate\">\r\n                {itm.BalanceDate}\r\n            </div>\r\n            <div className=\"fundIName\">\r\n                <input type=\"text\" name=\"Ibalance\" onChange={setField} value={fields.Ibalance} />\r\n            </div>\r\n            <div className=\"btnfundUpdate\">\r\n                <Fab onClick={SendUpdate} color=\"primary\" aria-label=\"edit\">\r\n                    <FaCheck style={{ fontSize: '30px' }} />\r\n                </Fab>\r\n            </div>\r\n            <div className=\"btnFundRemove\">\r\n                <Fab onClick={Delete} color=\"primary\" aria-label=\"edit\">\r\n                    <MdDelete style={{ fontSize: '30px' }} />\r\n                </Fab>\r\n            </div>\r\n            <div className=\"isActiveToggle\">\r\n                <ToggleItem id={`toggleItem${itm.id}`} isActive={itm.isActive} callBack={callback.bind(this)} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Account;\r\n\r\n","import React from 'react';\r\nimport Account from './Account';\r\nimport { connect } from '../../store/storeSettings';\r\n\r\nconst AccountsView = (props) => {\r\n  const funcFundUpdate = (prop) => {\r\n    const { model } = prop;\r\n    props.DispatchUpdateFund(model);\r\n  }\r\n  return (\r\n    props.funds.sort((a, b) => (a.id > b.id) ? 1 : -1).map(fundItem => <Account key={fundItem.id} funditem={fundItem} funcFundUpdate={funcFundUpdate.bind(this)} />)\r\n  )\r\n}\r\n//settings\r\nconst mapStateToProps = state => { return { funds: state.AvailableFunds } }\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    DispatchUpdateFund: (payload) => { dispatch({ type: 'UPDATE', payload }) },\r\n    dispatchDeleteFund: (payload) => dispatch({ type: 'DELETE', payload })\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountsView);\r\n\r\n","\r\nimport React, { useContext } from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { db } from '../../store/storeSettings';\r\nimport { getCurrentDate } from '../../utility/utilities';\r\n\r\nimport { Fab } from '@material-ui/core';\r\nimport { FaSave } from 'react-icons/fa';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\n\r\nconst AddView = (props) => {\r\n  const { dispatch } = useContext(db);\r\n  const { fields, setFields, setField, isBalanceValid } = useForm({ Iname: \"\", Ibalance: \"\" });\r\n  function Add() {\r\n    let model = { id: 0, Name: fields.Iname, Balance: fields.Ibalance, BalanceDate: getCurrentDate() };\r\n    dispatch({ type: 'ADD', payload: { model: model } });\r\n    setFields({ Iname: '', Ibalance: '' });\r\n  }\r\n  return (\r\n    <div className=\"Toolbar\">\r\n      <div>Name</div>\r\n      <input type=\"text\" name=\"Iname\" onChange={setField} value={fields.Iname} />\r\n      <div>$</div>\r\n      <input type=\"text\" name=\"Ibalance\" onChange={setField} value={fields.Ibalance} />\r\n      <div>{(isBalanceValid()) ? \"Valid\" : \"Not Valid\"}</div>\r\n      <Fab onClick={Add} color=\"primary\" aria-label=\"add\">\r\n        <FaSave style={{ fontSize: '28px', fontWeight: '900' }} />\r\n      </Fab>\r\n      <IconButton aria-label=\"delete\" className=\"btnCloseAddView\" onClick={() => dispatch({ type: \"VISIBLE\", payload: { target: 'CloseAddView' } })}>\r\n        <Cancel fontSize=\"large\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\nexport default AddView;\r\n","import React, { useContext } from 'react';\r\nimport '../AccountsSummary.scss'\r\n\r\nimport { db } from '../store/storeSettings';\r\nimport Moonies from './small/Moonies';\r\n\r\nimport { Fab } from '@material-ui/core';\r\nimport { FaPiggyBank, FaClipboardList } from 'react-icons/fa';\r\nimport { MdEdit } from 'react-icons/md'\r\nimport { TiShoppingCart } from 'react-icons/ti'\r\n//import {MdRestaurant} from 'react-icons/md'\r\n\r\nconst FundsSummary = () => {\r\n    const { state, dispatch } = useContext(db);\r\n    return (\r\n        <div className=\"FundsSummaryRoot\">\r\n            <div>\r\n                {(state.visible.isBtnAddViewVisible) && (\r\n                    <Fab onClick={() => dispatch({ type: 'VISIBLE', payload: { target: 'AddView' } })} color=\"primary\" aria-label=\"add\">\r\n                        <FaPiggyBank style={{ fontSize: '28px', fontWeight: '900' }} />+\r\n                </Fab>)}\r\n                {/* {(state.visible.isBtnAddViewVisible) && (\r\n                    <Fab onClick={() => dispatch({ type: 'VISIBLE', payload: { target: 'AddView' } })} color=\"primary\" aria-label=\"add\">\r\n                        <TiShoppingCart style={{ fontSize: '28px', fontWeight: '900', marginLeft: '5px' }} />+\r\n                </Fab>)} */}\r\n                {(state.visible.isBtnAddViewVisible) && (\r\n                    <Fab onClick={() => dispatch({ type: 'VISIBLE', payload: { target: 'AddView' } })} color=\"primary\" aria-label=\"add\">\r\n                        <FaClipboardList style={{ fontSize: '28px', fontWeight: '900', marginLeft: '5px' }} />+\r\n                </Fab>)}\r\n            </div>\r\n            <div>Summary</div>\r\n            <div>${state.SummaryTotals.TotalBalance}</div>\r\n            <div>\r\n                <Fab onClick={() => dispatch({ type: 'VISIBLE', payload: { target: 'AccountsView' } })} color=\"primary\" aria-label=\"edit\">\r\n                    <MdEdit style={{ fontSize: '30px' }} />\r\n                </Fab>\r\n            </div>\r\n            {/* <div>Current Budget</div>\r\n            <div>${state.SummaryTotals.CurrentBudget}</div> */}\r\n        </div>\r\n    );\r\n}\r\nexport default FundsSummary;","import React,{useEffect, useContext} from 'react';\r\nimport {db} from '../store/storeSettings';\r\nimport {MdViewList} from 'react-icons/md';\r\nimport {IoIosCard} from 'react-icons/io';\r\n\r\n\r\nconst ViewType = {\r\n    List:'list',\r\n    Card:'card'\r\n}\r\nconst ToolsBarItems = [\r\n    {id:1, viewType:ViewType.List, name:ViewType.List, icon:\"MdViewList\"}\r\n    ,{id:2, viewType:ViewType.Card, name:ViewType.Card, icon:\"IoIosCard\"}\r\n]\r\n\r\nconst ToolsBar = (props) =>\r\n{\r\n    const {state, dispatch} = useContext(db);\r\n\r\n    useEffect(()=>{\r\n\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <div id=\"ToolsBar_Root\">\r\n           {ToolsBarItems.map(item=>\r\n            <div key={item.id} className={`ToolsBarItem${item.id}`}>\r\n\r\n                     {(item.icon===\"MdViewList\"&&state.dataTheme.acts_theme===\"\")&& (<MdViewList className=\"acts_layout\" onClick={()=>{dispatch({type:'UPDATEACTSTHEME',payload:{theme:'list'}});}} />)}\r\n                     {(item.icon===\"IoIosCard\"&&state.dataTheme.acts_theme===\"list\")&& (<IoIosCard className=\"acts_layout\" onClick={()=>{dispatch({type:'UPDATEACTSTHEME',payload:{theme:''}});}} />)}\r\n\r\n\r\n            </div>\r\n           )}\r\n        </div>\r\n    )\r\n}\r\nexport default ToolsBar;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { db } from '../store/storeSettings';\r\nimport { getInitialMode } from '../utility/Locals';\r\nconst visible =\r\n{\r\n    isHeaderVisible: true\r\n    , isSummaryVisible: true\r\n    , isAddViewVisible: false\r\n    , isToolBarVisible: false\r\n    , isAccountView: false\r\n}\r\nconst Header = () => {\r\n    const [darkMode, setDarMode] = useState(getInitialMode());\r\n    const { state, dispatch } = useContext(db);\r\n    useEffect(() => {\r\n        console.log(\"render\");\r\n        localStorage.setItem('dark', JSON.stringify(darkMode));\r\n        dispatch({ type: 'THEMEMODE', payload: { mode: darkMode } });\r\n    }, [darkMode]);\r\n    return (\r\n        <div data-theme={state.dataTheme.theme} id=\"HeaderRoot\">\r\n            <div data-theme={state.dataTheme.theme} className=\"App_Title\" >\r\n                <span className=\"moonies\">\r\n                    <span>M</span>\r\n                    <span>o</span>\r\n                    <span>o</span>\r\n                    <span>n</span>\r\n                    <span>i</span>\r\n                    <span>e</span>\r\n                    <span>$</span>\r\n                </span>\r\n            </div>\r\n            <div className=\"toggle-container\">\r\n                <span style={darkMode ? { color: 'black' } : { color: 'yellow' }}>☼</span>\r\n                <span className=\"toggle\">\r\n                    <input\r\n                        checked={darkMode}\r\n                        onChange={() => { setDarMode(prevState => !prevState); }}\r\n                        type=\"checkbox\"\r\n                        className=\"checkbox\"\r\n                        id=\"checkbox\"\r\n                    />\r\n                    <label htmlFor=\"checkbox\" />\r\n                    <span style={!darkMode ? { color: 'black' } : { color: 'Purple' }}>☽</span>\r\n                </span>\r\n            </div></div>\r\n    );\r\n}\r\nexport default Header;","import React from 'react'\r\n\r\nconst TodoTemplate = (props) => {\r\n  const { todo } = props;\r\n  return (<div className=\"GroceryItem\">\r\n    <div>\r\n      <label>\r\n        <input type=\"checkbox\" onChange={() => { }} /></label></div>\r\n    <div>{todo.Name}</div>\r\n    <div>${todo.Budget}</div>\r\n    <div><input type=\"text\" /></div>\r\n    <div>${todo.Price}</div>\r\n    <div><input type=\"text\" /></div>\r\n  </div>);\r\n}\r\n\r\nexport default TodoTemplate;","import React, { useContext } from 'react';\r\nimport { Badge } from '@material-ui/core';\r\nimport { db } from '../store/storeSettings';\r\n\r\nconst TodoCategory = (props) => {\r\n    const { item } = props;\r\n    const { state, dispatch } = useContext(db);\r\n\r\n    return (\r\n        <div id=\"TodoCategory\" className=\"TodoCategory\" onClick={() => dispatch({ type: 'CATSELECTION', payload: { id: item.id } })}>\r\n            <div id={item.id}>{item.CatName}</div>\r\n            <div>\r\n                <Badge badgeContent={item.BadgeNumber} max={999} color=\"primary\" ></Badge>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default TodoCategory;","import React, { useState, useContext } from 'react';\r\nimport { db } from '../store/storeSettings';\r\n\r\nimport TodoCategory from './TodoCategory';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { FaPiggyBank } from 'react-icons/fa';\r\n\r\nconst TodoCatData = [\r\n    { id: 1, BadgeNumber: '25', CatName: \"Groceries\" },\r\n    { id: 2, BadgeNumber: '$245', CatName: \"Bedroom Budget\" },\r\n    { id: 3, BadgeNumber: '25', CatName: \"Groceries\" },\r\n    { id: 4, BadgeNumber: '45', CatName: \"Bedroom Budget\" },\r\n    { id: 5, BadgeNumber: '65', CatName: \"Groceries\" },\r\n    { id: 6, BadgeNumber: '28', CatName: \"Bedroom Budget\" },\r\n    { id: 7, BadgeNumber: '245', CatName: \"Home Depot\" }\r\n]\r\n\r\nconst useCategoryForm = initial => {\r\n    const [fields, setFields] = useState(initial)\r\n    function setState(props) {\r\n        debugger;\r\n        setFields({ ...fields, [props.name]: props.value });\r\n    }\r\n    return [fields, setState];\r\n}\r\n\r\nconst TodoCategoryView = () => {\r\n    const [fields, setState] = useCategoryForm({ catname: '' })\r\n    const { dispatch } = useContext(db);\r\n    return (<div id=\"TodoCategoryView\" className=\"TodoCategoryView\">\r\n        <Fab style={{ gridColumn: '1/8', justifySelf: 'start', fontSize: '33px' }} className=\"AddCat\" onClick={() => dispatch({ type: 'ADDCAT', payload: { categorName: 'wsds' } })} color=\"primary\" aria-label=\"add\">\r\n            +\r\n        </Fab>\r\n        <input type=\"text\" name=\"catname\" onChange={e => setState({ name: e.target.value })} value={fields.catname} />\r\n        {TodoCatData.map(item => <TodoCategory key={item.id} item={item} />)}\r\n    </div>)\r\n}\r\nexport default TodoCategoryView;","import React, { useContext } from 'react'\r\nimport TodoTemplate from './TodoTemplate';\r\nimport { db } from '../store/storeSettings';\r\nimport TodoCategoryView from './TodoCategoryView';\r\nimport '../css/TodoCategoryView.css';\r\n\r\nconst TodoView = () => {\r\n\r\n  const { state, dispatch } = useContext(db);\r\n  const GroceryTodoList = state.dataGroceryTodo;\r\n\r\n  return (<div id='TodoView' className=\"GroceryShoppingRow\">\r\n    <TodoCategoryView />\r\n    <div>Groceries Shopping</div>\r\n    <input type=\"text\" onChange={() => { }} /><button>Add</button>\r\n    {GroceryTodoList.filter(item => item.CategoryId === state.Selections.SelectedCategoryId).map(todo => <TodoTemplate key={todo.id} todo={todo} />)}\r\n  </div>);\r\n}\r\nexport default TodoView;","import React, { useState, useReducer, useEffect } from 'react';\r\nimport './App.scss';\r\nimport './moonies.scss'\r\nimport { db } from './store/storeSettings';\r\nimport dataCollections from './store/data';\r\nimport dbReducer from './store/dbReducer';\r\nimport { getInitialMode } from './utility/Locals';\r\n\r\n\r\n\r\n// import components\r\nimport AccountsView from './components/Accounts/AccountsView';\r\nimport AddView from './components/Accounts/AddView';\r\nimport FundsSummary from './components/FundsSummary'\r\nimport ToolsBar from './components/ToolsBar';\r\nimport Header from './components/Header';\r\nimport TodoView from './components/TodoView';\r\n\r\nfunction App() {\r\n\r\n  const [darkMode, setDarMode] = useState(getInitialMode());\r\n  const [state, dispatch] = useReducer(dbReducer, dataCollections)\r\n\r\n  useEffect(() => {\r\n    console.log(\"render\");\r\n    localStorage.setItem('dark', JSON.stringify(darkMode));\r\n    dispatch({ type: 'THEMEMODE', payload: { mode: darkMode } });\r\n  }, [darkMode]);\r\n  useEffect(() => {\r\n    dispatch({ type: 'UPDATETOTALS' });\r\n\r\n\r\n\r\n  }, []);\r\n  return (\r\n    <db.Provider value={{ state, dispatch }} >\r\n      <div data-theme={state.dataTheme.theme} id=\"todoGridParent\" className={darkMode ? \"Dark-Mode\" : \"Light-Mode\"}>\r\n        {(state.visible.isHeaderVisible) && <Header />}\r\n        {(state.visible.isSummaryVisible) && (<div data-theme={state.dataTheme.theme} id=\"FundsSummaryRoot\"><FundsSummary /></div>)}\r\n        {(state.visible.isAddViewVisible) && (<div data-theme={state.dataTheme.theme} id=\"ManageFundsRoot\"><AddView /></div>)}\r\n        {(state.visible.isToolBarVisible) && (<div id=\"ToolsBarRoot\"><ToolsBar /></div>)}\r\n        {(state.visible.isAccountView) && (<div data-theme={state.dataTheme.theme} data-accounts-layout={state.dataTheme.acts_theme} id=\"FundsView\" className=\"CollectionOfAvailFunds\"><AccountsView /></div>)}\r\n        <div id=\"todoViewContainer\">\r\n          <TodoView />\r\n        </div>\r\n      </div>\r\n    </db.Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//app.listen(3000, () => console.log(\"Server listening on port 3000!\"));\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}